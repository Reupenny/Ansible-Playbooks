# core_server_health_check.yml
---
- name: Perform Core Server and CloudPanel Health Check
  hosts: vultr_servers
  become: true

  vars:
    log_check_lines: 100 # Number of lines to check from logs

  tasks:
    - name: Ensure hosts are being targeted
      ansible.builtin.debug:
        msg: "Running on {{ inventory_hostname }}"

    - name: --- SYSTEM HEALTH CHECKS (Collecting Data) ---
      ansible.builtin.debug:
        msg: "Collecting system health data..."

    - name: Check disk space usage
      ansible.builtin.command: df -h /
      register: df_output
      changed_when: false

    - name: Check memory usage
      ansible.builtin.command: free -h
      register: free_output
      changed_when: false

    - name: Check system uptime and load average
      ansible.builtin.command: uptime
      register: uptime_output
      changed_when: false

    - name: --- SERVICE CHECKS (Collecting Data) ---
      ansible.builtin.debug:
        msg: "Gathering specific service status..."

    # Check Nginx service directly
    - name: Check Nginx service status
      ansible.builtin.service:
        name: nginx
      register: nginx_service_status_direct
      ignore_errors: yes # Don't fail the playbook if service check fails

    # Check CloudPanel service directly
    - name: Check CloudPanel service status
      ansible.builtin.service:
        name: clp-agent
      register: clp_agent_service_status_direct
      ignore_errors: yes # Don't fail the playbook if service check fails

    # --- TAILSCALE CHECKS (Collecting Data) ---
    - name: --- TAILSCALE CHECKS (Collecting Data) ---
      ansible.builtin.debug:
        msg: "Collecting Tailscale status..."

    - name: Check if Tailscale is installed
      ansible.builtin.command: dpkg -s tailscale
      register: tailscale_installed_check
      changed_when: false
      ignore_errors: yes # This will fail if tailscale is not installed, which is expected

    - name: Get Tailscale service status (if installed)
      ansible.builtin.command: systemctl is-active tailscale
      register: tailscale_is_active
      changed_when: false
      failed_when: false # Always succeed, check rc later
      when: tailscale_installed_check.rc == 0 # Only run if Tailscale is installed
      ignore_errors: yes # Ensure the playbook continues

    - name: Get Tailscale local IPv4 address (if installed)
      ansible.builtin.command: tailscale ip -4
      register: tailscale_local_ip
      changed_when: false
      when: tailscale_installed_check.rc == 0 and tailscale_is_active.rc == 0 # Only if installed and active
      ignore_errors: yes # Command might fail if not fully configured/running

    - name: Check Nginx configuration syntax
      ansible.builtin.command: nginx -t
      register: nginx_config_test
      changed_when: false
      failed_when: "'test failed' in nginx_config_test.stderr"
      ignore_errors: yes

    # --- LOG FILE ANALYSIS (Displaying Immediately as Requested) ---
    - name: --- LOG FILE ANALYSIS (LAST {{ log_check_lines }} LINES) ---
      ansible.builtin.debug:
        msg: "Scanning recent log files for errors/warnings (Output below):"

    - name: Check Nginx error log for recent errors/warnings
      ansible.builtin.shell: tail -n {{ log_check_lines }} /var/log/nginx/error.log | grep -iE "error|warn|crit|fail" || true
      register: nginx_log_errors
      changed_when: false
      ignore_errors: yes

    - name: Display Nginx error log findings
      ansible.builtin.debug:
        msg: >-
          Nginx Error Log Warnings/Errors (last {{ log_check_lines }} lines):
          {{ nginx_log_errors.stdout if nginx_log_errors.stdout else 'No errors/warnings found or log not accessible.' }}
      when: nginx_log_errors.stdout is defined and nginx_log_errors.stdout | length > 0

    - name: Check system syslog for recent errors/warnings
      ansible.builtin.shell: |
        if [ -f /var/log/syslog ]; then
          tail -n {{ log_check_lines }} /var/log/syslog | grep -iE "error|warn|crit|fail" || true
        elif [ -f /var/log/messages ]; then
          tail -n {{ log_check_lines }} /var/log/messages | grep -iE "error|warn|crit|fail" || true
        else
          echo "No syslog or messages file found."
        fi
      register: syslog_errors
      changed_when: false
      ignore_errors: yes

    - name: Display Syslog findings
      ansible.builtin.debug:
        msg: >-
          System Syslog Warnings/Errors (last {{ log_check_lines }} lines):
          {{ syslog_errors.stdout if syslog_errors.stdout else 'No errors/warnings found or log not accessible.' }}
      when: syslog_errors.stdout is defined and syslog_errors.stdout | length > 0

    # --- CONSOLIDATED HEALTH REPORT (Displaying at the End) ---
    - name: --- CONSOLIDATED HEALTH REPORT ---
      ansible.builtin.debug:
        msg: |
          =============================================
          SERVER HEALTH SUMMARY FOR {{ inventory_hostname }}
          =============================================

          --- DISK USAGE ---
          {{ df_output.stdout }}

          --- MEMORY USAGE ---
          {{ free_output.stdout }}

          --- UPTIME & LOAD AVERAGE ---
          {{ uptime_output.stdout }}

          --- NGINX STATUS ---
          Service Status: {{ 'running' if (nginx_service_status_direct.status.ActiveState == 'active') else 'NOT RUNNING' }}
          Config Test: {{ 'OK' if 'test is successful' in nginx_config_test.stderr else 'ERROR - Check stderr for details: ' + nginx_config_test.stderr }}

          --- CLOUDPANEL STATUS ---
          Service Status: {{ 'running' if (clp_agent_service_status_direct.status.ActiveState == 'active') else 'NOT RUNNING' }}
          
          --- TAILSCALE STATUS ---
          {% if tailscale_installed_check.rc == 0 %}
          Installation: YES
          Service Status: {{ 'running' if (tailscale_is_active.rc == 0) else 'NOT RUNNING' }}
          {% if tailscale_local_ip.stdout is defined %}
          Local IP: {{ tailscale_local_ip.stdout | trim }}
          {% else %}
          Local IP: (Not available or command failed)
          {% endif %}
          {% else %}
          Installation: NO (Tailscale is not installed)
          {% endif %}

          =============================================
          CHECK COMPLETE. Review above for any issues.
          =============================================